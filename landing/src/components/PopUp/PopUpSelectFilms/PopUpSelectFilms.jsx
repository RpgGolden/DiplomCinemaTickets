import { useEffect, useState } from "react";
import FilmBookings from "../../Film/FilmsBookings/FilmsBookings";
import styles from "./PopUpSelectFilms.module.scss";

function PopUpSelectFilms({ selectedFilm, close, setSelectedFilm }) {
  const [selectedSession, setSelectedSession] = useState(null);

  useEffect(() => {
    console.log("selectedFilm", selectedFilm);
  }, [selectedFilm]);

  const handleSelectSession = (session) => {
    setSelectedSession(session);
  };

  const handleBackToSessions = () => {
    setSelectedSession(null);
  };

  return (
    <div className={styles.PopUpSelectFilms}>
      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
      <button className={styles.closeButton} onClick={close}>
        X
      </button>

      {/* === –≠–ö–†–ê–ù 1: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª—å–º–µ –∏ –≤—ã–±–æ—Ä —Å–µ–∞–Ω—Å–∞ === */}
      {!selectedSession && (
        <div className={styles.firstStep}>
          <div className={styles.filmInfoGrid}>
            <img
              src={selectedFilm?.imageUrls?.[0]}
              alt="–ü–æ—Å—Ç–µ—Ä —Ñ–∏–ª—å–º–∞"
              className={styles.poster}
            />

            <div className={styles.details}>
              <h2>–§–∏–ª—å–º: {selectedFilm?.title}</h2>
              <p>–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: {selectedFilm?.ageRating}</p>
              <p>–†–µ–∂–∏—Å—Å–µ—Ä: {selectedFilm?.director}</p>
              <p>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {selectedFilm?.duration} –º–∏–Ω</p>
              <p>–û–ø–∏—Å–∞–Ω–∏–µ: {selectedFilm?.description}</p>
              <h3>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∞–Ω—Å:</h3>
                {
                    selectedFilm?.sessions?.length > 0 ? (
                        <div>
                            <ul className={styles.sessionList}>
                                {selectedFilm.sessions.map((session) => (
                                    <li
                                        key={session.id}
                                        className={styles.sessionItem}
                                        onClick={() => handleSelectSession(session)}
                                    >
                                        {new Date(session.sessionTime).toLocaleString("ru-RU")} ‚Äì{" "}
                                        {session.hall.name}
                                    </li>
                                ))}
                            </ul>
                        </div>
                    ) : (
                        <div className={styles.noSeanses}>
                            <p>–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ–∞–Ω—Å–æ–≤</p>
                        </div>
                    )
                }
            </div>
        </div>
        </div>
      )}

      {/* === –≠–ö–†–ê–ù 2: –≤—ã–±–æ—Ä –º–µ—Å—Ç === */}
      {selectedSession && (
        <div className={styles.secondStep}>
            <div className={styles.layout}>
                <div className={styles.sessionCard}>
                <h2>–í—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ–∞–Ω—Å</h2>
                <img
                    src={selectedFilm?.imageUrls?.[0]}
                    alt="–ü–æ—Å—Ç–µ—Ä —Ñ–∏–ª—å–º–∞"
                    className={styles.posterSelected}
                />
                <div className={styles.sessionInfoRow}>
                    <span className={styles.label}>üé¨ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</span>
                    <span>{new Date(selectedSession.sessionTime).toLocaleString("ru-RU")}</span>
                </div>
                <div className={styles.sessionInfoRow}>
                    <span className={styles.label}>üè¢ –ó–∞–ª:</span>
                    <span>{selectedSession.hall.name}</span>
                </div>
                <div className={styles.sessionInfoRow}>
                    <span className={styles.label}>ü™ë –ú–µ—Å—Ç –≤ —Ä—è–¥—É:</span>
                    <span>{selectedSession.hall.seatCount}</span>
                </div>
                <div className={styles.sessionInfoRow}>
                    <span className={styles.label}>üìè –ö–æ–ª-–≤–æ —Ä—è–¥–æ–≤:</span>
                    <span>{selectedSession.hall.rowCount}</span>
                </div>
                </div>

                <div className={styles.bookingArea}>
                <FilmBookings session={selectedSession} handleBackToSessions={handleBackToSessions} setSelectedFilm={setSelectedFilm}/>
                </div>
            </div>
            </div>


      )}
    </div>
  );
}

export default PopUpSelectFilms;
